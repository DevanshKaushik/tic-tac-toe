{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","Array","map","x","j","renderSquare","React","Component","Game","state","history","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","move","bold","desc","style","fontWeight","jumpTo","includes","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"uNAIA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAU,SACVC,QAASF,EAAME,QAFjB,SAIGF,EAAMG,Q,IAKPC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKxC,WAAU,IAAD,OACP,OACE,8BACG,YAAIG,MAAM,IAAIC,KAAI,SAACC,EAAGL,GACrB,OACE,qBAAKJ,UAAU,YAAf,SACG,YAAIO,MAAM,IAAIC,KAAI,SAACC,EAAGC,GACrB,OAAQ,EAAKC,aAAa,EAAEP,EAAIM,iB,GAjB5BE,IAAMC,WA2BpBC,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXC,QAAS,CAAC,CACRV,QAASC,MAAM,GAAGU,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,+CAWnB,SAAYf,GACV,IAAMY,EAAUX,KAAKU,MAAMC,QAAQI,MAAM,EAAGf,KAAKU,MAAMG,WAAa,GAE9DZ,EADUU,EAAQA,EAAQK,OAAS,GACjBf,QAAQc,QAC5BE,EAAgBhB,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKU,MAAMI,QAAU,IAAM,IACxCd,KAAKkB,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBlB,QAASA,KAEXY,WAAYF,EAAQK,OACpBF,SAAUd,KAAKU,MAAMI,a,oBAIzB,SAAOM,GACLpB,KAAKkB,SAAS,CACZL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,oBAI5B,WAAU,IAuBJC,EAvBG,OACDV,EAAUX,KAAKU,MAAMC,QACrBW,EAAUX,EAAQX,KAAKU,MAAMG,YAC7BU,EAASN,EAAgBK,EAAQrB,SAEjCuB,EAAQb,EAAQR,KAAI,SAACiB,EAAMK,GAC/B,IAAMC,EAAO,EAAKhB,MAAMG,aAAeY,EAAO,OAAS,GACjDE,EAAOF,EACX,eAAiBA,EACjB,mBAEF,OACE,6BACE,wBACEG,MAAO,CAACC,WAAYH,GACpB9B,QAAS,kBAAM,EAAKkC,OAAOL,IAF7B,SAIGE,KALIF,MAoBb,OAPEJ,EADCE,EACQ,WAAaA,EACbD,EAAQrB,QAAQ8B,SAAS,MACzB,iBAAmB/B,KAAKU,MAAMI,QAAU,IAAM,KAE9C,uBAIT,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAAWqB,EAAQrB,QACnBL,QAAW,SAACG,GAAD,OAAO,EAAKiC,YAAYjC,QAGvC,sBAAKJ,UAAU,YAAf,UACE,8BAAM0B,IACN,6BAAKG,c,GA9EIjB,IAAMC,WA4FzB,SAASS,EAAgBhB,GAWvB,IAVA,IAAMgC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAlC,EAAI,EAAGA,EAAIkC,EAAMjB,OAAQjB,IAAK,CAAC,IAAD,cACnBkC,EAAMlC,GADa,GAC9BmC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInC,EAAQiC,IAAMjC,EAAQiC,KAAOjC,EAAQkC,IAAMlC,EAAQiC,KAAOjC,EAAQmC,GACpE,OAAOnC,EAAQiC,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC7B,EAAD,IACA8B,SAASC,eAAe,U","file":"static/js/main.1d238f00.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {[...Array(3)].map((x, i) => {\n          return (\n            <div className=\"board-row\">\n              {[...Array(3)].map((x, j) => {\n                return (this.renderSquare(3*i + j))\n              })}\n            </div>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const bold = this.state.stepNumber === move ? \"bold\" : \"\"\n      const desc = move ?\n        \"Go to move #\" + move:\n        \"Go to game start\";\n\n      return (\n        <li key={move}>\n          <button\n            style={{fontWeight: bold}}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if(winner) {\n      status = \"Winner: \" + winner;\n    } else if (current.squares.includes(null)) {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    } else {\n      status = \"No one won the match\"\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares = {current.squares}\n            onClick = {(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}